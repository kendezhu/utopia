//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Utopia
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class UtopiaEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“UtopiaEntities”部分中的连接字符串初始化新 UtopiaEntities 对象。
        /// </summary>
        public UtopiaEntities() : base("name=UtopiaEntities", "UtopiaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UtopiaEntities 对象。
        /// </summary>
        public UtopiaEntities(string connectionString) : base(connectionString, "UtopiaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UtopiaEntities 对象。
        /// </summary>
        public UtopiaEntities(EntityConnection connection) : base(connection, "UtopiaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Uto_User> Uto_User
        {
            get
            {
                if ((_Uto_User == null))
                {
                    _Uto_User = base.CreateObjectSet<Uto_User>("Uto_User");
                }
                return _Uto_User;
            }
        }
        private ObjectSet<Uto_User> _Uto_User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Uto_Microblog> Uto_Microblog
        {
            get
            {
                if ((_Uto_Microblog == null))
                {
                    _Uto_Microblog = base.CreateObjectSet<Uto_Microblog>("Uto_Microblog");
                }
                return _Uto_Microblog;
            }
        }
        private ObjectSet<Uto_Microblog> _Uto_Microblog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Uto_Attachment> Uto_Attachment
        {
            get
            {
                if ((_Uto_Attachment == null))
                {
                    _Uto_Attachment = base.CreateObjectSet<Uto_Attachment>("Uto_Attachment");
                }
                return _Uto_Attachment;
            }
        }
        private ObjectSet<Uto_Attachment> _Uto_Attachment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Uto_Message> Uto_Message
        {
            get
            {
                if ((_Uto_Message == null))
                {
                    _Uto_Message = base.CreateObjectSet<Uto_Message>("Uto_Message");
                }
                return _Uto_Message;
            }
        }
        private ObjectSet<Uto_Message> _Uto_Message;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Uto_Comment> Uto_Comment
        {
            get
            {
                if ((_Uto_Comment == null))
                {
                    _Uto_Comment = base.CreateObjectSet<Uto_Comment>("Uto_Comment");
                }
                return _Uto_Comment;
            }
        }
        private ObjectSet<Uto_Comment> _Uto_Comment;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Uto_User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUto_User(Uto_User uto_User)
        {
            base.AddObject("Uto_User", uto_User);
        }
    
        /// <summary>
        /// 用于向 Uto_Microblog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUto_Microblog(Uto_Microblog uto_Microblog)
        {
            base.AddObject("Uto_Microblog", uto_Microblog);
        }
    
        /// <summary>
        /// 用于向 Uto_Attachment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUto_Attachment(Uto_Attachment uto_Attachment)
        {
            base.AddObject("Uto_Attachment", uto_Attachment);
        }
    
        /// <summary>
        /// 用于向 Uto_Message EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUto_Message(Uto_Message uto_Message)
        {
            base.AddObject("Uto_Message", uto_Message);
        }
    
        /// <summary>
        /// 用于向 Uto_Comment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUto_Comment(Uto_Comment uto_Comment)
        {
            base.AddObject("Uto_Comment", uto_Comment);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UtopiaModel", Name="Uto_Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uto_Attachment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Uto_Attachment 对象。
        /// </summary>
        /// <param name="attachmentId">AttachmentId 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="url">Url 属性的初始值。</param>
        /// <param name="belongId">BelongId 属性的初始值。</param>
        public static Uto_Attachment CreateUto_Attachment(global::System.Int64 attachmentId, global::System.String type, global::System.Int64 userId, global::System.String url, global::System.Int64 belongId)
        {
            Uto_Attachment uto_Attachment = new Uto_Attachment();
            uto_Attachment.AttachmentId = attachmentId;
            uto_Attachment.Type = type;
            uto_Attachment.UserId = userId;
            uto_Attachment.Url = url;
            uto_Attachment.BelongId = belongId;
            return uto_Attachment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                if (_AttachmentId != value)
                {
                    OnAttachmentIdChanging(value);
                    ReportPropertyChanging("AttachmentId");
                    _AttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentId");
                    OnAttachmentIdChanged();
                }
            }
        }
        private global::System.Int64 _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Int64 value);
        partial void OnAttachmentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BelongId
        {
            get
            {
                return _BelongId;
            }
            set
            {
                OnBelongIdChanging(value);
                ReportPropertyChanging("BelongId");
                _BelongId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BelongId");
                OnBelongIdChanged();
            }
        }
        private global::System.Int64 _BelongId;
        partial void OnBelongIdChanging(global::System.Int64 value);
        partial void OnBelongIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UtopiaModel", Name="Uto_Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uto_Comment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Uto_Comment 对象。
        /// </summary>
        /// <param name="commentId">CommentId 属性的初始值。</param>
        /// <param name="body">Body 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="sendUserId">SendUserId 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="dateCreated">DateCreated 属性的初始值。</param>
        /// <param name="belongId">BelongId 属性的初始值。</param>
        public static Uto_Comment CreateUto_Comment(global::System.Int64 commentId, global::System.String body, global::System.Int64 userId, global::System.Int64 sendUserId, global::System.String type, global::System.DateTime dateCreated, global::System.Int64 belongId)
        {
            Uto_Comment uto_Comment = new Uto_Comment();
            uto_Comment.CommentId = commentId;
            uto_Comment.Body = body;
            uto_Comment.UserId = userId;
            uto_Comment.SendUserId = sendUserId;
            uto_Comment.Type = type;
            uto_Comment.DateCreated = dateCreated;
            uto_Comment.BelongId = belongId;
            return uto_Comment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int64 _CommentId;
        partial void OnCommentIdChanging(global::System.Int64 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendUserId
        {
            get
            {
                return _SendUserId;
            }
            set
            {
                OnSendUserIdChanging(value);
                ReportPropertyChanging("SendUserId");
                _SendUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendUserId");
                OnSendUserIdChanged();
            }
        }
        private global::System.Int64 _SendUserId;
        partial void OnSendUserIdChanging(global::System.Int64 value);
        partial void OnSendUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BelongId
        {
            get
            {
                return _BelongId;
            }
            set
            {
                OnBelongIdChanging(value);
                ReportPropertyChanging("BelongId");
                _BelongId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BelongId");
                OnBelongIdChanged();
            }
        }
        private global::System.Int64 _BelongId;
        partial void OnBelongIdChanging(global::System.Int64 value);
        partial void OnBelongIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UtopiaModel", Name="Uto_Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uto_Message : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Uto_Message 对象。
        /// </summary>
        /// <param name="messageId">MessageId 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="isIgnore">IsIgnore 属性的初始值。</param>
        /// <param name="dateCreated">DateCreated 属性的初始值。</param>
        /// <param name="belongId">BelongId 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="sendUserId">SendUserId 属性的初始值。</param>
        /// <param name="childrenBelongId">ChildrenBelongId 属性的初始值。</param>
        public static Uto_Message CreateUto_Message(global::System.Int64 messageId, global::System.String type, global::System.Boolean isIgnore, global::System.DateTime dateCreated, global::System.Int64 belongId, global::System.Int64 userId, global::System.Int64 sendUserId, global::System.Int64 childrenBelongId)
        {
            Uto_Message uto_Message = new Uto_Message();
            uto_Message.MessageId = messageId;
            uto_Message.Type = type;
            uto_Message.IsIgnore = isIgnore;
            uto_Message.DateCreated = dateCreated;
            uto_Message.BelongId = belongId;
            uto_Message.UserId = userId;
            uto_Message.SendUserId = sendUserId;
            uto_Message.ChildrenBelongId = childrenBelongId;
            return uto_Message;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int64 _MessageId;
        partial void OnMessageIdChanging(global::System.Int64 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIgnore
        {
            get
            {
                return _IsIgnore;
            }
            set
            {
                OnIsIgnoreChanging(value);
                ReportPropertyChanging("IsIgnore");
                _IsIgnore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIgnore");
                OnIsIgnoreChanged();
            }
        }
        private global::System.Boolean _IsIgnore;
        partial void OnIsIgnoreChanging(global::System.Boolean value);
        partial void OnIsIgnoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BelongId
        {
            get
            {
                return _BelongId;
            }
            set
            {
                OnBelongIdChanging(value);
                ReportPropertyChanging("BelongId");
                _BelongId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BelongId");
                OnBelongIdChanged();
            }
        }
        private global::System.Int64 _BelongId;
        partial void OnBelongIdChanging(global::System.Int64 value);
        partial void OnBelongIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendUserId
        {
            get
            {
                return _SendUserId;
            }
            set
            {
                OnSendUserIdChanging(value);
                ReportPropertyChanging("SendUserId");
                _SendUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendUserId");
                OnSendUserIdChanged();
            }
        }
        private global::System.Int64 _SendUserId;
        partial void OnSendUserIdChanging(global::System.Int64 value);
        partial void OnSendUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ChildrenBelongId
        {
            get
            {
                return _ChildrenBelongId;
            }
            set
            {
                OnChildrenBelongIdChanging(value);
                ReportPropertyChanging("ChildrenBelongId");
                _ChildrenBelongId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildrenBelongId");
                OnChildrenBelongIdChanged();
            }
        }
        private global::System.Int64 _ChildrenBelongId;
        partial void OnChildrenBelongIdChanging(global::System.Int64 value);
        partial void OnChildrenBelongIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UtopiaModel", Name="Uto_Microblog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uto_Microblog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Uto_Microblog 对象。
        /// </summary>
        /// <param name="microblogId">MicroblogId 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="body">Body 属性的初始值。</param>
        /// <param name="dateCreated">DateCreated 属性的初始值。</param>
        /// <param name="attachmentId">AttachmentId 属性的初始值。</param>
        /// <param name="commentCount">CommentCount 属性的初始值。</param>
        /// <param name="repeatId">RepeatId 属性的初始值。</param>
        /// <param name="repeatCount">RepeatCount 属性的初始值。</param>
        public static Uto_Microblog CreateUto_Microblog(global::System.Int64 microblogId, global::System.Int64 userId, global::System.String body, global::System.DateTime dateCreated, global::System.Int64 attachmentId, global::System.Int64 commentCount, global::System.Int64 repeatId, global::System.Int64 repeatCount)
        {
            Uto_Microblog uto_Microblog = new Uto_Microblog();
            uto_Microblog.MicroblogId = microblogId;
            uto_Microblog.UserId = userId;
            uto_Microblog.Body = body;
            uto_Microblog.DateCreated = dateCreated;
            uto_Microblog.AttachmentId = attachmentId;
            uto_Microblog.CommentCount = commentCount;
            uto_Microblog.RepeatId = repeatId;
            uto_Microblog.RepeatCount = repeatCount;
            return uto_Microblog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MicroblogId
        {
            get
            {
                return _MicroblogId;
            }
            set
            {
                if (_MicroblogId != value)
                {
                    OnMicroblogIdChanging(value);
                    ReportPropertyChanging("MicroblogId");
                    _MicroblogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MicroblogId");
                    OnMicroblogIdChanged();
                }
            }
        }
        private global::System.Int64 _MicroblogId;
        partial void OnMicroblogIdChanging(global::System.Int64 value);
        partial void OnMicroblogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                OnAttachmentIdChanging(value);
                ReportPropertyChanging("AttachmentId");
                _AttachmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentId");
                OnAttachmentIdChanged();
            }
        }
        private global::System.Int64 _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Int64 value);
        partial void OnAttachmentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CommentCount
        {
            get
            {
                return _CommentCount;
            }
            set
            {
                OnCommentCountChanging(value);
                ReportPropertyChanging("CommentCount");
                _CommentCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentCount");
                OnCommentCountChanged();
            }
        }
        private global::System.Int64 _CommentCount;
        partial void OnCommentCountChanging(global::System.Int64 value);
        partial void OnCommentCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepeatContent
        {
            get
            {
                return _RepeatContent;
            }
            set
            {
                OnRepeatContentChanging(value);
                ReportPropertyChanging("RepeatContent");
                _RepeatContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepeatContent");
                OnRepeatContentChanged();
            }
        }
        private global::System.String _RepeatContent;
        partial void OnRepeatContentChanging(global::System.String value);
        partial void OnRepeatContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RepeatId
        {
            get
            {
                return _RepeatId;
            }
            set
            {
                OnRepeatIdChanging(value);
                ReportPropertyChanging("RepeatId");
                _RepeatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepeatId");
                OnRepeatIdChanged();
            }
        }
        private global::System.Int64 _RepeatId;
        partial void OnRepeatIdChanging(global::System.Int64 value);
        partial void OnRepeatIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RepeatCount
        {
            get
            {
                return _RepeatCount;
            }
            set
            {
                OnRepeatCountChanging(value);
                ReportPropertyChanging("RepeatCount");
                _RepeatCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepeatCount");
                OnRepeatCountChanged();
            }
        }
        private global::System.Int64 _RepeatCount;
        partial void OnRepeatCountChanging(global::System.Int64 value);
        partial void OnRepeatCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UtopiaModel", Name="Uto_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uto_User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Uto_User 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="username">Username 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        /// <param name="isActivity">IsActivity 属性的初始值。</param>
        public static Uto_User CreateUto_User(global::System.Int64 userId, global::System.String email, global::System.String password, global::System.String username, global::System.String sex, global::System.String isActivity)
        {
            Uto_User uto_User = new Uto_User();
            uto_User.UserId = userId;
            uto_User.Email = email;
            uto_User.Password = password;
            uto_User.Username = username;
            uto_User.Sex = sex;
            uto_User.IsActivity = isActivity;
            return uto_User;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsActivity
        {
            get
            {
                return _IsActivity;
            }
            set
            {
                OnIsActivityChanging(value);
                ReportPropertyChanging("IsActivity");
                _IsActivity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsActivity");
                OnIsActivityChanged();
            }
        }
        private global::System.String _IsActivity;
        partial void OnIsActivityChanging(global::System.String value);
        partial void OnIsActivityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivityCode
        {
            get
            {
                return _ActivityCode;
            }
            set
            {
                OnActivityCodeChanging(value);
                ReportPropertyChanging("ActivityCode");
                _ActivityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivityCode");
                OnActivityCodeChanged();
            }
        }
        private global::System.String _ActivityCode;
        partial void OnActivityCodeChanging(global::System.String value);
        partial void OnActivityCodeChanged();

        #endregion
    
    }

    #endregion
    
}
